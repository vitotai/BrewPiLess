; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
env_default = d1pro-classic, d1pro
#sonoff OTA no longer supported
#env_default = classic, classic-spanish, classic-portuguese-br, classic-slovak, classic-tw, newui, newui-tw, newui-spanish, newui-portuguese-br, newui-slovak,  newui-oled, thorrax, sonoff, sonoff-esp8285 , thorrax-classic

[common_env_data]
lib_deps_external = 
    ArduinoJson@6.10.0
    OneWire
    ESP8266_SSD1306

[env:development]
platform = espressif8266@~2.2.0
board = nodemcuv2
framework = arduino
lib_extra_dirs = ./lib_async
build_flags = -Wl,-Tesp8266.flash.4m2m.ld 
    -DSerialDebug=true
    -DOLED_LCD=true
;    -DFORCE_KEEPALIVE=true

monitor_speed = 115200
lib_deps = ${common_env_data.lib_deps_external} 

upload_port = /dev/cu.wchusbserial1410

[env:development-esp8285]
board_build.flash_mode = dout
board_flash_mode = dout
platform = espressif8266@~2.2.0
board = esp01_1m
framework = arduino
lib_extra_dirs = ./lib_async
build_flags = -Wl,-Tesp8266.flash.1m64.ld -DBOARD=Sonoff -DUseClassicFrontEnd=true
#        -DNoEmbeddedFile=true
lib_deps = ${common_env_data.lib_deps_external}


monitor_speed = 115200

upload_port = /dev/cu.wchusbserial1410


[env:classic]
platform = espressif8266@~2.2.0
board = nodemcuv2
framework = arduino
lib_extra_dirs = ./lib_async
build_flags = -Wl,-Tesp8266.flash.4m2m.ld -DUseClassicFrontEnd=true

lib_deps = ${common_env_data.lib_deps_external}

[env:d1pro-classic]
platform = espressif8266@~2.2.0
board = d1_mini_pro
framework = arduino
lib_extra_dirs = ./lib_async
build_flags = -Wl,-Tesp8266.flash.16m14m.ld -DUseClassicFrontEnd=true

lib_deps = ${common_env_data.lib_deps_external}


[env:d1pro]
platform = espressif8266@~2.2.0
board = d1_mini_pro
framework = arduino
lib_extra_dirs = ./lib_async
build_flags = -Wl,-Tesp8266.flash.16m14m.ld

lib_deps = ${common_env_data.lib_deps_external}

[env:classic-spanish]
platform = espressif8266@~2.2.0
board = nodemcuv2
framework = arduino
lib_extra_dirs = ./lib_async
build_flags = -Wl,-Tesp8266.flash.4m2m.ld -DUseClassicFrontEnd=true
    -DWebPageLanguage=spanish

lib_deps = ${common_env_data.lib_deps_external}

[env:classic-portuguese-br]
platform = espressif8266@~2.2.0
board = nodemcuv2
framework = arduino
lib_extra_dirs = ./lib_async
build_flags = -Wl,-Tesp8266.flash.4m2m.ld -DUseClassicFrontEnd=true
    -DWebPageLanguage=portuguese-br

lib_deps = ${common_env_data.lib_deps_external}

[env:classic-slovak]
platform = espressif8266@~2.2.0
board = nodemcuv2
framework = arduino
lib_extra_dirs = ./lib_async
build_flags = -Wl,-Tesp8266.flash.4m2m.ld -DUseClassicFrontEnd=true
    -DWebPageLanguage=portuguese-br

lib_deps = ${common_env_data.lib_deps_external}

[env:classic-tw]
platform = espressif8266@~2.2.0
board = nodemcuv2
framework = arduino
lib_extra_dirs = ./lib_async
build_flags = -Wl,-Tesp8266.flash.4m2m.ld -DUseClassicFrontEnd=true
    -DWebPageLanguage=chinese

lib_deps = ${common_env_data.lib_deps_external}


[env:newui] 
;not yet working
platform = espressif8266@~2.2.0
board = d1_mini
framework = arduino
lib_extra_dirs = ./lib_async
build_flags = -Wl,-Tesp8266.flash.4m2m.ld 

lib_deps = ${common_env_data.lib_deps_external}


[env:newui-spanish]
platform = espressif8266@~2.2.0
board = nodemcuv2
framework = arduino
lib_extra_dirs = ./lib_async
build_flags = -Wl,-Tesp8266.flash.4m2m.ld
    -DWebPageLanguage=spanish

lib_deps = ${common_env_data.lib_deps_external}


[env:newui-portuguese-br]
platform = espressif8266@~2.2.0
board = nodemcuv2
framework = arduino
lib_extra_dirs = ./lib_async
build_flags = -Wl,-Tesp8266.flash.4m2m.ld
    -DWebPageLanguage=portuguese-br

lib_deps = ${common_env_data.lib_deps_external}

[env:newui-slovak]
platform = espressif8266@~2.2.0
board = nodemcuv2
framework = arduino
lib_extra_dirs = ./lib_async
build_flags = -Wl,-Tesp8266.flash.4m2m.ld
    -DWebPageLanguage=slovak

lib_deps = ${common_env_data.lib_deps_external}

[env:newui-tw]
platform = espressif8266@~2.2.0
board = nodemcuv2
framework = arduino
lib_extra_dirs = ./lib_async
build_flags = -Wl,-Tesp8266.flash.4m2m.ld
    -DWebPageLanguage=chinese

lib_deps = ${common_env_data.lib_deps_external}


[env:newui-oled]
platform = espressif8266@~2.2.0
board = nodemcuv2
framework = arduino
lib_extra_dirs = ./lib_async
build_flags = -Wl,-Tesp8266.flash.4m2m.ld -DOLED_LCD=true 
lib_deps = ${common_env_data.lib_deps_external}


[env:thorrax]
platform = espressif8266@~2.2.0
board = nodemcuv2
framework = arduino
lib_extra_dirs = ./lib_async
build_flags = -Wl,-Tesp8266.flash.4m2m.ld -DBOARD=Thorrak_PCB
lib_deps = ${common_env_data.lib_deps_external}

[env:thorrax-classic]
platform = espressif8266@~2.2.0
board = nodemcuv2
framework = arduino
lib_extra_dirs = ./lib_async
build_flags = -Wl,-Tesp8266.flash.4m2m.ld -DUseClassicFrontEnd=true -DBOARD=Thorrak_PCB
lib_deps = ${common_env_data.lib_deps_external}


[env:sonoff]
platform = espressif8266@~2.2.0
board = esp01_1m
framework = arduino
lib_extra_dirs = ./lib_async
build_flags = -Wl,-Tesp8266.flash.1m64.ld -DBOARD=Sonoff -DUseClassicFrontEnd=true
lib_deps = ${common_env_data.lib_deps_external}

#[env:sonoffota]
#platform = espressif8266@~2.2.0
#board = esp01_1m
#framework = arduino
#lib_extra_dirs = ./lib_async
#build_flags = -Wl,-Tesp8266.flash.1m64.ld -DBOARD=Sonoff -DNO_SPIFFS -DUseClassicFrontEnd=true
#lib_deps = ${common_env_data.lib_deps_external}

[env:sonoff-esp8285]
board_build.flash_mode = dout
board_flash_mode = dout
platform = espressif8266@~2.2.0
board = esp01_1m
framework = arduino
lib_extra_dirs = ./lib_async
build_flags = -Wl,-Tesp8266.flash.1m64.ld -DBOARD=Sonoff -DUseClassicFrontEnd=true

lib_deps = ${common_env_data.lib_deps_external}

#[env:sonoffota-esp8285]
#board_build.flash_mode = dout
#board = esp01_1m
#board_flash_mode = dout
#platform = espressif8266@~2.2.0
#board = esp01_1m
#framework = arduino
#lib_extra_dirs = ./lib_async
#build_flags = -Wl,-Tesp8266.flash.1m64.ld -DBOARD=Sonoff -DNO_SPIFFS -DUseClassicFrontEnd=true

#lib_deps = ${common_env_data.lib_deps_external}
